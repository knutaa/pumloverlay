name: Java CI

on: [push]

env:
  APP: pumloverlay
  ARTIFACT_NAME: 'pumloverlay.tgz'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
       - uses: actions/checkout@v1
                   
       - name: Set up JDK 11
         uses: actions/setup-java@v1
         with:
           java-version: 1.11
       
       - name: OpenAPItools - Build with Maven
         env:
            USER_NAME: ${{ secrets.REPO_USER_NAME }}
            ACCESS_TOKEN: ${{ secrets.REPO_TOKEN }}
         run: |
            mvn install --settings=settings.xml
 
       - name: OpenAPItools - Copy the resulting jar
         run: |
           ls -l
           mkdir -p tooling
           cp target/${APP}*SNAPSHOT.jar tooling
  
       - name: Combine artifacts
         run: |
           tar -czvf ${{ env.ARTIFACT_NAME }} tooling
    
       - name: Upload Artifacts
         uses: actions/upload-artifact@master
         with:
           name: ${{ env.ARTIFACT_NAME }}
           path: ${{ env.ARTIFACT_NAME }}
  
  test:
    runs-on: ubuntu-latest
    name: test
    needs: [build]
    steps:       
       - name: Download Artifacts
         uses: actions/download-artifact@master
         with:
           name: ${{ env.ARTIFACT_NAME }}
           path: ./

       - name: Test strategy
         run: |
           echo "Testing - to be added"
 
  # release:
  #   runs-on: ubuntu-latest
  #   name: publish release
  #   needs: [test]
  #   permissions: 
  #     contents: read
  #     packages: write  

  #   steps:       
  #     - name: Download Artifacts
  #       uses: actions/download-artifact@master
  #       with:
  #         name: ${{ env.ARTIFACT_NAME }}
  #         path: ./

  #     - name: Get timestamp
  #       run: |
  #         echo "NOW=$(date +'%Y%m%d%H%M')" >> $GITHUB_ENV
  #         echo "NOW=" ${NOW}
  #         ls -l
       
  #     - name: Create Release
  #       id: create_release
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         tag_name: tools-${{ env.NOW }} 
  #         release_name: Release tooling ${{ env.NOW }}  
  #         draft: false
  #         prerelease: false

  #     - name: Upload Release Asset
  #       id: upload-release-asset 
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ${{ env.ARTIFACT_NAME }}
  #         asset_name: ${{ env.ARTIFACT_NAME }}
  #         asset_content_type: application/gzip

      # - name: Publish package
      #   run: |
      #     find . -name settings.xml -exec cat {} \;
      #     mvn --batch-mode deploy
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  package:
    runs-on: ubuntu-latest
    name: publish package
    needs: [test]
    permissions: 
      contents: read
      packages: write 
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Publish package
        run: mvn --batch-mode deploy --settings=settings.xml
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
          USER_NAME: ${{ secrets.REPO_USER_NAME }}
          ACCESS_TOKEN: ${{ secrets.REPO_TOKEN }}
